/**
 * Eric Meyer's Reset CSS v2.0 (http://meyerweb.com/eric/tools/css/reset/)
 * http://cssreset.com
 */
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* VARIABLES */
@font-face {
  font-family: 'onramp';
  src: url("/fonts/onramp-webfont.woff2") format("woff2"), url("/fonts/onramp-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

/* MIX-INS & FUNCTIONS */
/*
EXAMPLE USAGE:
h1 {
	@include fontmath(1em, 36, 42, 4.5);
}

Ensure that the base unit has a 1 in front of it - whether it be 1em or 1rem, it's required to do the math. Do not use units for the other numbers (it assumes those are pixel values and converts them to the proper formats for responsive text).
*/
/* MAIN */
:root {
  --space: 1.5em;
  --padding: 15px; }
  @media only screen and (min-width: 1900px) {
    :root {
      --padding: 25px; } }
  @media only screen and (min-width: 1600px) {
    :root {
      --padding: 20px; } }
  @media only screen and (max-width: 1075px) {
    :root {
      --space: 1.25rem; } }
  @media only screen and (max-width: 975px) {
    :root {
      --space: 1rem;
      --padding: 10px; } }
  @media only screen and (max-width: 700px) {
    :root {
      --space: 0.875rem;
      --padding: 5px; } }

* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box; }
  *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box; }

html {
  min-height: 100%;
  height: 100%;
  -webkit-text-size-adjust: none;
  background: rgba(255, 172, 190, 0.5); }

body {
  min-height: 100%;
  width: 100%;
  max-width: 100%;
  position: relative;
  overflow-x: hidden; }

main,
nav,
header,
article,
footer,
section,
div {
  display: block;
  position: relative; }

main {
  padding-left: calc( ( var(--space) * 2 + 1px ) - var(--padding));
  padding-right: calc( ( var(--space) * 2 + 1px ) - var(--padding));
  padding-left: calc( ( var(--space) * 2 + 1px ) - var(--padding));
  padding-right: calc( ( var(--space) * 2 + 1px ) - var(--padding)); }

nav,
header,
main {
  font-size: 1rem;
  overflow-x: hidden; }
  @media only screen and (min-width: 1900px) {
    nav,
    header,
    main {
      font-size: 1.25rem; } }
  @media only screen and (min-width: 1600px) {
    nav,
    header,
    main {
      font-size: 1.15rem; } }
  @media only screen and (max-width: 1075px) {
    nav,
    header,
    main {
      font-size: 0.9rem; } }

/* Z-INDEX & LAYERS */
nav {
  z-index: 999; }

.map {
  z-index: -1; }

/* GRID */
.grid__row {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  box-pack: justify;
  -webkit-justify-content: space-between;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -o-justify-content: space-between;
  justify-content: space-between;
  -ms-flex-pack: justify;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  box-align: stretch;
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  -o-align-items: stretch;
  align-items: stretch;
  -ms-flex-align: stretch; }
  @media only screen and (max-width: 700px) {
    .grid__row {
      -webkit-box-orient: vertical;
      -moz-box-orient: vertical;
      box-orient: vertical;
      -webkit-box-direction: normal;
      -moz-box-direction: normal;
      box-direction: normal;
      -webkit-flex-direction: column;
      -moz-flex-direction: column;
      flex-direction: column;
      -ms-flex-direction: column; } }

.grid__block {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-lines: multiple;
  -moz-box-lines: multiple;
  box-lines: multiple;
  -webkit-flex-wrap: wrap;
  -moz-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  box-pack: justify;
  -webkit-justify-content: space-between;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -o-justify-content: space-between;
  justify-content: space-between;
  -ms-flex-pack: justify;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  box-align: stretch;
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  -o-align-items: stretch;
  align-items: stretch;
  -ms-flex-align: stretch; }

.grid--half {
  width: calc( 50% - 5px); }
  @media only screen and (max-width: 700px) {
    .grid--half {
      width: 100%; } }

.grid--100 {
  width: 100%; }

.grid--75 {
  width: 75%; }

.grid--66 {
  width: calc( ( 100% / 3 ) * 2); }

.grid--50 {
  width: 50%; }

.grid--33 {
  width: calc( 100% / 3); }

.grid--25 {
  width: 25%; }

.grid--100,
.grid--75,
.grid--66,
.grid--50,
.grid--33,
.grid--25 {
  padding: 15px;
  padding: var(--padding); }
  @media only screen and (max-width: 700px) {
    .grid--100,
    .grid--75,
    .grid--66,
    .grid--50,
    .grid--33,
    .grid--25 {
      width: 100%; } }

/* TEXT */
* {
  text-rendering: optimizeLegibility;
  -webkit-font-feature-settings: "kern", "liga", "dlig";
  -moz-font-feature-settings: "kern", "liga", "dlig";
  -moz-font-feature-settings: "kern=1", "liga=1", "dlig=1";
  font-feature-settings: "kern" 1, "liga" 1, "dlig" 1;
  font-kerning: normal; }

a {
  outline: none; }

h1,
h2,
h3,
h4,
.caption {
  display: block;
  font-family: "onramp", sans-serif;
  text-transform: uppercase;
  color: #1A1A1A;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

h1 {
  font-size: 2.5em;
  line-height: 1;
  letter-spacing: 0.5em;
  text-indent: 0.5em;
  text-align: center; }
  h1:first-child {
    margin-top: -0.125em; }

h2 {
  font-size: 2.5em;
  line-height: 1;
  letter-spacing: 0.25em;
  padding-bottom: 0.15em;
  text-indent: -0.04em;
  white-space: nowrap; }
  @media only screen and (max-width: 700px) {
    h2 {
      margin-top: 0.15em;
      line-height: 0.75;
      white-space: normal; } }

h3 {
  font-size: 1.25em;
  line-height: 1.3;
  letter-spacing: 0.5em; }
  @media only screen and (max-width: 975px) {
    h3 {
      font-size: 1.125em;
      line-height: 1.33333;
      letter-spacing: 0.27778em; } }
  @media only screen and (max-width: 700px) {
    h3 {
      font-size: 1.25em;
      line-height: 1.3;
      letter-spacing: 0.5em; } }

.safari-font-fix h3 {
  -webkit-text-stroke: 0.05px; }

h4 {
  font-size: 1em;
  line-height: 1;
  letter-spacing: 0.25em; }
  h4 a {
    display: inline-block;
    position: relative;
    color: #1A1A1A;
    text-decoration: none; }
    h4 a:after {
      display: block;
      position: absolute;
      bottom: 0;
      left: 0;
      right: 0.25em;
      height: 1px;
      border-bottom: 1px dotted #1A1A1A;
      opacity: 0.5;
      content: ''; }
    h4 a:hover:after, h4 a:active:after, h4 a:focus:after {
      border-bottom: 1px solid #1A1A1A;
      opacity: 1; }
  article:nth-child(even) h4:not(.no-spacing) {
    margin-right: -0.25em; }
  article:nth-child(even) h4.no-spacing {
    margin-right: -0.05em; }
  h4.no-spacing {
    margin-top: 0.25em;
    letter-spacing: 0.05em; }

.safari-font-fix h4 {
  -webkit-text-stroke: 0.1px; }

p {
  display: block;
  font-family: "kings-caslon-display", serif;
  font-size: 1.5em;
  line-height: 1.58333;
  letter-spacing: 0em;
  text-indent: 1.75em;
  margin-bottom: 0.5em; }
  p:first-child {
    text-indent: 0; }
  p em {
    font-style: italic; }
  p strong {
    font-weight: bold; }
  @media only screen and (max-width: 1075px) {
    p {
      text-indent: 1.5em; } }

.safari-font-fix p {
  -webkit-text-stroke: 0.1px; }

p a {
  position: relative;
  font-weight: bold;
  color: #1A1A1A;
  text-decoration: none; }
  p a:after {
    display: block;
    position: absolute;
    bottom: -0.15em;
    left: 0;
    right: 0;
    border-bottom: 1px dotted #1A1A1A;
    opacity: 0.75;
    content: ''; }
  p a:hover:after, p a:active:after, p a:focus:after {
    border-bottom: 1px solid #1A1A1A;
    opacity: 1; }

.caption {
  font-size: 1.125em;
  line-height: 1;
  letter-spacing: 0.05556em; }

.safari-font-fix .caption {
  -webkit-text-stroke: 0.1px; }

.nav__menu-links__single,
.nav__menu-links:before {
  font-family: "kings-caslon-display", serif;
  font-size: 1.5em;
  line-height: 1;
  letter-spacing: 0em;
  color: #1A1A1A;
  text-decoration: none; }

.safari-font-fix .nav__menu-links__single,
.safari-font-fix .nav__menu-links:before {
  -webkit-text-stroke: 0.1px; }

.nav__menu-links__single:not(.inactive):hover, .nav__menu-links__single:not(.inactive):active, .nav__menu-links__single:not(.inactive):focus {
  padding-right: 0.4em;
  font-style: italic; }

li:first-child .nav__menu-links__single:not(.inactive):hover, li:first-child .nav__menu-links__single:not(.inactive):active, li:first-child .nav__menu-links__single:not(.inactive):focus {
  padding-right: 0.425em; }

.button {
  font-family: "kings-caslon-display", serif;
  font-size: 1.5em;
  line-height: 1;
  letter-spacing: 0em;
  color: #1A1A1A;
  text-decoration: none; }
  .button:hover, .button:active, .button:focus {
    font-style: italic;
    color: #FFACBE; }

/* IMAGES */
img {
  display: block;
  width: 100%;
  height: auto;
  margin: 0;
  padding: 0; }

.img--border {
  background-color: rgba(255, 172, 190, 0.5);
  background-image: url("/images/patterns/load.gif");
  background-repeat: no-repeat;
  background-size: 20px 20px;
  background-position: center center;
  border: 5px solid #FFACBE; }

.img--margin {
  margin-bottom: 10px; }

/* NAV */
nav {
  position: fixed;
  overflow: visible;
  top: 1.5em;
  right: 1.5em;
  bottom: 1.5em;
  left: 1.5em;
  padding: 1.5em;
  top: var(--space);
  right: var(--space);
  bottom: var(--space);
  left: var(--space);
  padding: var(--space);
  border: 1px solid #1A1A1A;
  pointer-events: none;
  outline: none; }

.nav__menu {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  box-pack: justify;
  -webkit-justify-content: space-between;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -o-justify-content: space-between;
  justify-content: space-between;
  -ms-flex-pack: justify;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  box-align: stretch;
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  -o-align-items: stretch;
  align-items: stretch;
  -ms-flex-align: stretch;
  height: calc( var(--space) * 2);
  height: calc( var(--space) * 2); }
  @media only screen and (max-width: 700px) {
    .nav__menu {
      height: calc( var(--space) * 3);
      height: calc( var(--space) * 3); } }

.nav__menu-logo--link,
.nav__menu-logo {
  height: calc( var(--space) * 2);
  width: calc( var(--space) * 2);
  height: calc( var(--space) * 2);
  width: calc( var(--space) * 2); }
  @media only screen and (max-width: 700px) {
    .nav__menu-logo--link,
    .nav__menu-logo {
      height: calc( var(--space) * 3);
      width: calc( var(--space) * 3);
      height: calc( var(--space) * 3);
      width: calc( var(--space) * 3); } }

.nav__menu-logo--link {
  display: block;
  position: absolute;
  left: 0;
  top: 0;
  pointer-events: auto; }

.nav__menu-logo {
  padding: 0.25em;
  background: #1A1A1A; }

.nav__menu-right {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  box-align: stretch;
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  -o-align-items: stretch;
  align-items: stretch;
  -ms-flex-align: stretch;
  height: 100%; }
  .nav__menu-right:before {
    display: block;
    position: absolute;
    left: 0;
    bottom: 0;
    width: 50vw;
    height: 1px;
    background: #1A1A1A;
    -webkit-transform: translateX(2em);
    -moz-transform: translateX(2em);
    -ms-transform: translateX(2em);
    -o-transform: translateX(2em);
    transform: translateX(2em);
    transition: transform 0.25s;
    content: ''; }
  .nav__menu-right.nav__menu--active:before {
    -webkit-transform: translateX(0);
    -moz-transform: translateX(0);
    -ms-transform: translateX(0);
    -o-transform: translateX(0);
    transform: translateX(0); }

.nav__menu-right__container {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -o-align-items: center;
  align-items: center;
  -ms-flex-align: center;
  height: 100%;
  overflow: hidden; }

.nav__menu-links {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -o-align-items: center;
  align-items: center;
  -ms-flex-align: center;
  height: 100%;
  pointer-events: auto; }
  .nav__menu-links li {
    height: 100%;
    -webkit-transform: translateY(100%);
    -moz-transform: translateY(100%);
    -ms-transform: translateY(100%);
    -o-transform: translateY(100%);
    transform: translateY(100%);
    transition: transform 0.5s; }
    .nav__menu-links li:first-child {
      margin-right: 1em; }
  .nav__menu-links:before {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -moz-box-orient: horizontal;
    box-orient: horizontal;
    -webkit-box-direction: normal;
    -moz-box-direction: normal;
    box-direction: normal;
    -webkit-flex-direction: row;
    -moz-flex-direction: row;
    flex-direction: row;
    -ms-flex-direction: row;
    -webkit-box-lines: single;
    -moz-box-lines: single;
    box-lines: single;
    -webkit-flex-wrap: nowrap;
    -moz-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
    -webkit-box-pack: center;
    -moz-box-pack: center;
    box-pack: center;
    -webkit-justify-content: center;
    -moz-justify-content: center;
    -ms-justify-content: center;
    -o-justify-content: center;
    justify-content: center;
    -ms-flex-pack: center;
    -webkit-box-align: center;
    -moz-box-align: center;
    box-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    -ms-align-items: center;
    -o-align-items: center;
    align-items: center;
    -ms-flex-align: center;
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    border-bottom: 1px solid #1A1A1A;
    transition: transform 0.5s;
    content: attr(data-title); }
  .nav__menu--active .nav__menu-links li {
    -webkit-transform: translateY(0);
    -moz-transform: translateY(0);
    -ms-transform: translateY(0);
    -o-transform: translateY(0);
    transform: translateY(0); }
  .nav__menu--active .nav__menu-links:before {
    -webkit-transform: translateY(100%);
    -moz-transform: translateY(100%);
    -ms-transform: translateY(100%);
    -o-transform: translateY(100%);
    transform: translateY(100%); }

.nav__menu-links__single {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -o-align-items: center;
  align-items: center;
  -ms-flex-align: center;
  height: 100%;
  border-bottom: 1px solid #1A1A1A;
  transition: opacity 0.25s; }
  .nav__menu-links__single.inactive {
    cursor: default;
    opacity: 0.35; }

/* HEADER */
.hero, .footer {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -o-align-items: center;
  align-items: center;
  -ms-flex-align: center;
  height: 100vh;
  overflow: visible; }
  .hero:before, .footer:before {
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 50%;
    height: 110%;
    background: url("/images/patterns/pattern_wave.png");
    background-size: 20px auto;
    mix-blend-mode: multiply;
    opacity: 0.35;
    content: ''; }
    @media only screen and (max-width: 700px) {
      .hero:before, .footer:before {
        height: 100%; } }

.hero__title, .footer__title {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: justify;
  -moz-box-pack: justify;
  box-pack: justify;
  -webkit-justify-content: space-between;
  -moz-justify-content: space-between;
  -ms-justify-content: space-between;
  -o-justify-content: space-between;
  justify-content: space-between;
  -ms-flex-pack: justify;
  -webkit-box-align: stretch;
  -moz-box-align: stretch;
  box-align: stretch;
  -webkit-align-items: stretch;
  -moz-align-items: stretch;
  -ms-align-items: stretch;
  -o-align-items: stretch;
  align-items: stretch;
  -ms-flex-align: stretch;
  height: 30%;
  -webkit-transform: translateZ(0) rotate(-90deg);
  -moz-transform: translateZ(0) rotate(-90deg);
  -ms-transform: translateZ(0) rotate(-90deg);
  -o-transform: translateZ(0) rotate(-90deg);
  transform: translateZ(0) rotate(-90deg); }
  .hero__title:before, .footer__title:before, .hero__title:after, .footer__title:after {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: calc( var(--space) * 1.5);
    width: calc( var(--space) * 1.5);
    height: 1px;
    background: #1A1A1A;
    content: ''; }
    @media only screen and (max-width: 700px) {
      .hero__title:before, .footer__title:before, .hero__title:after, .footer__title:after {
        width: 20px; } }
  .hero__title:before, .footer__title:before {
    -webkit-transform: translate3d(-50%, -50%, 0) rotate(45deg);
    -moz-transform: translate3d(-50%, -50%, 0) rotate(45deg);
    -ms-transform: translate3d(-50%, -50%, 0) rotate(45deg);
    -o-transform: translate3d(-50%, -50%, 0) rotate(45deg);
    transform: translate3d(-50%, -50%, 0) rotate(45deg); }
  .hero__title:after, .footer__title:after {
    -webkit-transform: translate3d(-50%, -50%, 0) rotate(-45deg);
    -moz-transform: translate3d(-50%, -50%, 0) rotate(-45deg);
    -ms-transform: translate3d(-50%, -50%, 0) rotate(-45deg);
    -o-transform: translate3d(-50%, -50%, 0) rotate(-45deg);
    transform: translate3d(-50%, -50%, 0) rotate(-45deg); }

/* FOOTER */
.footer:before {
  left: auto;
  top: auto;
  right: 0;
  bottom: 0; }

/* BUTTONS */
.button {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: row;
  -moz-flex-direction: row;
  flex-direction: row;
  -ms-flex-direction: row;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: center;
  -moz-box-pack: center;
  box-pack: center;
  -webkit-justify-content: center;
  -moz-justify-content: center;
  -ms-justify-content: center;
  -o-justify-content: center;
  justify-content: center;
  -ms-flex-pack: center;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -o-align-items: center;
  align-items: center;
  -ms-flex-align: center;
  position: relative;
  width: 75%;
  height: 2.25em;
  margin: 0.75em 0;
  text-align: center;
  background: rgba(255, 172, 190, 0.35);
  border: 1px solid #1A1A1A; }
  .button:hover, .button:active, .button:focus {
    background: #1A1A1A; }
  @media only screen and (max-width: 700px) {
    .button {
      width: 100%; } }

/* GLYPHS */
#logo-pupil {
  -webkit-animation: shifty 7s ease;
  -moz-animation: shifty 7s ease;
  animation: shifty 7s ease;
  -webkit-animation-delay: 3s;
  -moz-animation-delay: 3s;
  animation-delay: 3s;
  -webkit-animation-iteration-count: infinite;
  -moz-animation-iteration-count: infinite;
  animation-iteration-count: infinite; }

@-webkit-keyframes shifty {
  0% {
    -webkit-transform: translate3d(0, 0, 0); }
  14% {
    -webkit-transform: translate3d(0, 0, 0); }
  25% {
    -webkit-transform: translate3d(-20px, 0, 0); }
  27% {
    -webkit-transform: translate3d(-20px, 0, 0); }
  42% {
    -webkit-transform: translate3d(20px, 0, 0); }
  44% {
    -webkit-transform: translate3d(20px, 0, 0); }
  55% {
    -webkit-transform: translate3d(0, 0, 0); }
  100% {
    -webkit-transform: translate3d(0, 0, 0); } }

@-moz-keyframes shifty {
  0% {
    -moz-transform: translate3d(0, 0, 0); }
  14% {
    -moz-transform: translate3d(0, 0, 0); }
  25% {
    -moz-transform: translate3d(-20px, 0, 0); }
  27% {
    -moz-transform: translate3d(-20px, 0, 0); }
  42% {
    -moz-transform: translate3d(20px, 0, 0); }
  44% {
    -moz-transform: translate3d(20px, 0, 0); }
  55% {
    -moz-transform: translate3d(0, 0, 0); }
  100% {
    -moz-transform: translate3d(0, 0, 0); } }

@keyframes shifty {
  0% {
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  14% {
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  25% {
    -webkit-transform: translate3d(-20px, 0, 0);
    -moz-transform: translate3d(-20px, 0, 0);
    -ms-transform: translate3d(-20px, 0, 0);
    -o-transform: translate3d(-20px, 0, 0);
    transform: translate3d(-20px, 0, 0); }
  27% {
    -webkit-transform: translate3d(-20px, 0, 0);
    -moz-transform: translate3d(-20px, 0, 0);
    -ms-transform: translate3d(-20px, 0, 0);
    -o-transform: translate3d(-20px, 0, 0);
    transform: translate3d(-20px, 0, 0); }
  42% {
    -webkit-transform: translate3d(20px, 0, 0);
    -moz-transform: translate3d(20px, 0, 0);
    -ms-transform: translate3d(20px, 0, 0);
    -o-transform: translate3d(20px, 0, 0);
    transform: translate3d(20px, 0, 0); }
  44% {
    -webkit-transform: translate3d(20px, 0, 0);
    -moz-transform: translate3d(20px, 0, 0);
    -ms-transform: translate3d(20px, 0, 0);
    -o-transform: translate3d(20px, 0, 0);
    transform: translate3d(20px, 0, 0); }
  55% {
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0); } }

/* VIDEO & CONTAINERS */
.browser {
  display: block;
  width: 100%;
  height: 2em;
  background: #e6e6e6;
  border: 1px solid #1A1A1A;
  border-radius: 2px 2px 0 0; }
  .browser:after {
    display: block;
    position: absolute;
    top: 0;
    left: 0.75em;
    height: 100%;
    width: 50%;
    background: url("/images/patterns/browser_btn.png") no-repeat;
    background-size: auto 40%;
    background-position: left center;
    opacity: 0.5;
    content: ''; }
  @media only screen and (max-width: 700px) {
    .browser {
      height: 1.5em; } }

.video-load.browser-video {
  padding-top: 56.54296875%;
  background-color: #FFACBE;
  background-image: url("/images/patterns/load.gif");
  background-repeat: no-repeat;
  background-size: 20px 20px;
  background-position: center center;
  border: 1px solid #1A1A1A;
  border-top: 0;
  border-radius: 0 0 2px 2px;
  overflow: hidden; }

.fluid-width-video-wrapper {
  -webkit-transform: rotate(0deg);
  -moz-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  -o-transform: rotate(0deg);
  transform: rotate(0deg);
  border-radius: 0 0 2px 2px;
  overflow: hidden;
  background: #1A1A1A;
  border: 1px solid #1A1A1A;
  border-top: 0; }

/* MAP */
.map {
  display: block;
  position: fixed;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; }
  .map.mapboxgl-map {
    position: fixed;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%; }
    .mobile .map.mapboxgl-map {
      bottom: auto;
      height: 120%; }
  .map .mapboxgl-canvas-container {
    width: 100%;
    height: 100%; }
    .mobile .map .mapboxgl-canvas-container {
      height: 120%; }

/* WORK ARTICLES */
article {
  padding-top: 12em;
  padding-bottom: 12em; }
  @media only screen and (max-width: 700px) {
    article {
      padding-top: 10em;
      padding-bottom: 10em; } }

article:nth-child(odd) .work__title {
  -webkit-box-align: end;
  -moz-box-align: end;
  box-align: end;
  -webkit-align-items: flex-end;
  -moz-align-items: flex-end;
  -ms-align-items: flex-end;
  -o-align-items: flex-end;
  align-items: flex-end;
  -ms-flex-align: end;
  -webkit-box-ordinal-group: 1;
  -moz-box-ordinal-group: 1;
  box-ordinal-group: 1;
  -webkit-order: 1;
  -moz-order: 1;
  order: 1;
  -ms-flex-order: 1; }
  article:nth-child(odd) .work__title h2 {
    position: absolute;
    left: 100%;
    bottom: 15px;
    bottom: var(--padding);
    transform-origin: left bottom;
    -webkit-transform: rotate(-90deg);
    -moz-transform: rotate(-90deg);
    -ms-transform: rotate(-90deg);
    -o-transform: rotate(-90deg);
    transform: rotate(-90deg); }
    @media only screen and (max-width: 700px) {
      article:nth-child(odd) .work__title h2 {
        position: relative;
        left: auto;
        bottom: 0;
        padding-top: 0;
        -webkit-transform: rotate(0);
        -moz-transform: rotate(0);
        -ms-transform: rotate(0);
        -o-transform: rotate(0);
        transform: rotate(0); } }
  @media only screen and (max-width: 700px) {
    article:nth-child(odd) .work__title {
      -webkit-box-align: start;
      -moz-box-align: start;
      box-align: start;
      -webkit-align-items: flex-start;
      -moz-align-items: flex-start;
      -ms-align-items: flex-start;
      -o-align-items: flex-start;
      align-items: flex-start;
      -ms-flex-align: start;
      -webkit-box-ordinal-group: 2;
      -moz-box-ordinal-group: 2;
      box-ordinal-group: 2;
      -webkit-order: 2;
      -moz-order: 2;
      order: 2;
      -ms-flex-order: 2; } }

article:nth-child(odd) .work__hero {
  -webkit-box-ordinal-group: 2;
  -moz-box-ordinal-group: 2;
  box-ordinal-group: 2;
  -webkit-order: 2;
  -moz-order: 2;
  order: 2;
  -ms-flex-order: 2; }
  article:nth-child(odd) .work__hero:after {
    right: calc( var(--padding) + 1px + ( var(--space) * -2 ));
    right: calc( var(--padding) + 1px + ( var(--space) * -2 )); }
  @media only screen and (max-width: 700px) {
    article:nth-child(odd) .work__hero {
      -webkit-box-ordinal-group: 1;
      -moz-box-ordinal-group: 1;
      box-ordinal-group: 1;
      -webkit-order: 1;
      -moz-order: 1;
      order: 1;
      -ms-flex-order: 1; } }

article:nth-child(odd) .work__detail {
  -webkit-box-align: end;
  -moz-box-align: end;
  box-align: end;
  -webkit-align-items: flex-end;
  -moz-align-items: flex-end;
  -ms-align-items: flex-end;
  -o-align-items: flex-end;
  align-items: flex-end;
  -ms-flex-align: end;
  -webkit-box-ordinal-group: 1;
  -moz-box-ordinal-group: 1;
  box-ordinal-group: 1;
  -webkit-order: 1;
  -moz-order: 1;
  order: 1;
  -ms-flex-order: 1; }
  article:nth-child(odd) .work__detail h3 {
    margin-right: -0.5em; }
    @media only screen and (max-width: 975px) {
      article:nth-child(odd) .work__detail h3 {
        margin-right: -0.27778em; } }
  article:nth-child(odd) .work__detail:before {
    right: 15px;
    right: var(--padding); }
  @media only screen and (max-width: 700px) {
    article:nth-child(odd) .work__detail {
      -webkit-box-align: start;
      -moz-box-align: start;
      box-align: start;
      -webkit-align-items: flex-start;
      -moz-align-items: flex-start;
      -ms-align-items: flex-start;
      -o-align-items: flex-start;
      align-items: flex-start;
      -ms-flex-align: start; } }

article:nth-child(odd) .work__description {
  -webkit-box-ordinal-group: 2;
  -moz-box-ordinal-group: 2;
  box-ordinal-group: 2;
  -webkit-order: 2;
  -moz-order: 2;
  order: 2;
  -ms-flex-order: 2; }

article:nth-child(odd) .work__footer:after {
  left: 0; }

article:nth-child(even) .work__title {
  -webkit-box-align: start;
  -moz-box-align: start;
  box-align: start;
  -webkit-align-items: flex-start;
  -moz-align-items: flex-start;
  -ms-align-items: flex-start;
  -o-align-items: flex-start;
  align-items: flex-start;
  -ms-flex-align: start;
  -webkit-box-ordinal-group: 2;
  -moz-box-ordinal-group: 2;
  box-ordinal-group: 2;
  -webkit-order: 2;
  -moz-order: 2;
  order: 2;
  -ms-flex-order: 2; }
  article:nth-child(even) .work__title h2 {
    position: absolute;
    left: 0;
    top: calc( 100% - var(--padding));
    padding-top: 0.075em;
    transform-origin: left top;
    -webkit-transform: rotate(-90deg);
    -moz-transform: rotate(-90deg);
    -ms-transform: rotate(-90deg);
    -o-transform: rotate(-90deg);
    transform: rotate(-90deg); }
    @media only screen and (max-width: 700px) {
      article:nth-child(even) .work__title h2 {
        position: relative;
        left: auto;
        top: auto;
        padding-top: 0;
        -webkit-transform: rotate(0);
        -moz-transform: rotate(0);
        -ms-transform: rotate(0);
        -o-transform: rotate(0);
        transform: rotate(0); } }

article:nth-child(even) .work__hero {
  -webkit-box-ordinal-group: 1;
  -moz-box-ordinal-group: 1;
  box-ordinal-group: 1;
  -webkit-order: 1;
  -moz-order: 1;
  order: 1;
  -ms-flex-order: 1;
  margin-left: calc( ( var(--space) * -2 ) - 1px - var(--padding));
  margin-left: calc( ( var(--space) * -2 ) - 1px - var(--padding)); }
  article:nth-child(even) .work__hero:after {
    left: 0; }

article:nth-child(even) .work__detail {
  -webkit-box-align: start;
  -moz-box-align: start;
  box-align: start;
  -webkit-align-items: flex-start;
  -moz-align-items: flex-start;
  -ms-align-items: flex-start;
  -o-align-items: flex-start;
  align-items: flex-start;
  -ms-flex-align: start;
  -webkit-box-ordinal-group: 2;
  -moz-box-ordinal-group: 2;
  box-ordinal-group: 2;
  -webkit-order: 2;
  -moz-order: 2;
  order: 2;
  -ms-flex-order: 2; }
  article:nth-child(even) .work__detail:before {
    left: 15px;
    left: var(--padding); }
  @media only screen and (max-width: 700px) {
    article:nth-child(even) .work__detail {
      -webkit-box-ordinal-group: 1;
      -moz-box-ordinal-group: 1;
      box-ordinal-group: 1;
      -webkit-order: 1;
      -moz-order: 1;
      order: 1;
      -ms-flex-order: 1; } }

article:nth-child(even) .work__description {
  -webkit-box-ordinal-group: 1;
  -moz-box-ordinal-group: 1;
  box-ordinal-group: 1;
  -webkit-order: 1;
  -moz-order: 1;
  order: 1;
  -ms-flex-order: 1; }
  @media only screen and (max-width: 700px) {
    article:nth-child(even) .work__description {
      -webkit-box-ordinal-group: 2;
      -moz-box-ordinal-group: 2;
      box-ordinal-group: 2;
      -webkit-order: 2;
      -moz-order: 2;
      order: 2;
      -ms-flex-order: 2; } }

article:nth-child(even) .work__footer {
  text-align: right; }
  article:nth-child(even) .work__footer:after {
    right: 0; }
  @media only screen and (max-width: 700px) {
    article:nth-child(even) .work__footer {
      text-align: left; } }

.work__header {
  margin-bottom: 5em; }
  @media only screen and (max-width: 700px) {
    .work__header {
      margin-bottom: 2em; } }

.work__title {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: end;
  -moz-box-pack: end;
  box-pack: end;
  -webkit-justify-content: flex-end;
  -moz-justify-content: flex-end;
  -ms-justify-content: flex-end;
  -o-justify-content: flex-end;
  justify-content: flex-end;
  -ms-flex-pack: end; }

.work__hero img {
  width: calc( 100% + var(--padding) + 1px + ( var(--space) * 2 ));
  width: calc( 100% + var(--padding) + 1px + ( var(--space) * 2 ));
  opacity: 0.5;
  mix-blend-mode: multiply; }

.work__hero:after {
  display: block;
  position: absolute;
  top: 70%;
  width: 75%;
  height: 40%;
  background: url("/images/patterns/pattern_wave.png");
  background-size: 20px auto;
  mix-blend-mode: multiply;
  opacity: 0.35;
  content: ''; }
  @media only screen and (max-width: 700px) {
    .work__hero:after {
      top: auto;
      bottom: 70%; } }

.work__content {
  margin-bottom: 2em; }

.work__detail {
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  box-orient: vertical;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  box-direction: normal;
  -webkit-flex-direction: column;
  -moz-flex-direction: column;
  flex-direction: column;
  -ms-flex-direction: column;
  -webkit-box-lines: single;
  -moz-box-lines: single;
  box-lines: single;
  -webkit-flex-wrap: nowrap;
  -moz-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  -webkit-box-pack: start;
  -moz-box-pack: start;
  box-pack: start;
  -webkit-justify-content: flex-start;
  -moz-justify-content: flex-start;
  -ms-justify-content: flex-start;
  -o-justify-content: flex-start;
  justify-content: flex-start;
  -ms-flex-pack: start;
  padding-top: 1.5em; }
  .work__detail:before {
    display: block;
    position: absolute;
    top: 15px;
    top: var(--padding);
    width: 100vw;
    height: 1px;
    background: #1A1A1A;
    content: ''; }
  @media only screen and (max-width: 700px) {
    .work__detail {
      padding-bottom: 2em; } }

.work__description p:first-child {
  margin-top: -0.4em; }

.work__description p:last-of-type {
  margin-bottom: 1.75em; }

.work__footer {
  padding-bottom: 15px;
  padding-bottom: var(--padding); }
  .work__footer:after {
    display: block;
    position: absolute;
    bottom: 0;
    width: 100vw;
    height: 1px;
    background: #1A1A1A;
    content: ''; }
  @media only screen and (max-width: 700px) {
    .work__footer {
      padding-bottom: 1.5em; } }

.caption {
  display: block;
  position: relative;
  padding-top: calc( var(--padding) / 2);
  padding-top: calc( var(--padding) / 2); }
  .caption:before {
    display: block;
    position: absolute;
    top: 0;
    width: 100vw;
    height: 1px;
    background: #1A1A1A;
    content: ''; }

.caption--left {
  text-align: right;
  margin-right: -0.05556em; }
  .caption--left:before {
    right: 0; }
  @media only screen and (max-width: 700px) {
    .caption--left {
      text-align: left;
      margin-right: 0; } }

.caption--right:before {
  left: 0; }

/* LOADING */
.nav__menu-right {
  overflow: visible;
  transition: 0.25s;
  transition-delay: 0.5s; }
  .loading .nav__menu-right {
    -webkit-transform: translate3d(130%, 0, 0);
    -moz-transform: translate3d(130%, 0, 0);
    -ms-transform: translate3d(130%, 0, 0);
    -o-transform: translate3d(130%, 0, 0);
    transform: translate3d(130%, 0, 0); }

.nav__menu-right__container {
  overflow-y: hidden; }

.nav__menu-links {
  transition: transform 0.25s;
  transition-delay: 0.75s; }
  .loading .nav__menu-links {
    -webkit-transform: translate3d(0, 100%, 0);
    -moz-transform: translate3d(0, 100%, 0);
    -ms-transform: translate3d(0, 100%, 0);
    -o-transform: translate3d(0, 100%, 0);
    transform: translate3d(0, 100%, 0); }

.hero:before, .footer:before {
  transition: 0.25s;
  transition-delay: 0.75s; }
  .loading .hero:before, .loading .footer:before {
    -webkit-transform: translate3d(-100%, 0, 0);
    -moz-transform: translate3d(-100%, 0, 0);
    -ms-transform: translate3d(-100%, 0, 0);
    -o-transform: translate3d(-100%, 0, 0);
    transform: translate3d(-100%, 0, 0); }

.hero__title, .footer__title {
  transition: 0.5s;
  transition-delay: 0.75s;
  -webkit-perspective: 1000;
  -moz-perspective: 1000;
  perspective: 1000; }
  .loading .hero__title, .loading .footer__title {
    -webkit-transform: rotate(0);
    -moz-transform: rotate(0);
    -ms-transform: rotate(0);
    -o-transform: rotate(0);
    transform: rotate(0); }

.hero__title:before, .footer__title:before,
.hero__title:after,
.footer__title:after {
  width: calc( var(--space) * 1.5);
  max-width: calc( var(--space) * 1.5);
  width: calc( var(--space) * 1.5);
  max-width: calc( var(--space) * 1.5);
  transition: 0.25s; }
  @media only screen and (max-width: 700px) {
    .hero__title:before, .footer__title:before,
    .hero__title:after,
    .footer__title:after {
      width: 20px;
      max-width: 20px; } }
  .loading .hero__title:before, .loading .footer__title:before,
  .loading
  .hero__title:after,
  .loading .footer__title:after {
    width: 0;
    max-width: 0; }

.hero__title h1, .footer__title h1 {
  transition: 0.25s;
  transition-delay: 0.5s; }
  .loading .hero__title h1, .loading .footer__title h1 {
    opacity: 0; }

.loading .hero__title h1:first-child, .loading .footer__title h1:first-child {
  -webkit-transform: translate3d(0, -100%, 0);
  -moz-transform: translate3d(0, -100%, 0);
  -ms-transform: translate3d(0, -100%, 0);
  -o-transform: translate3d(0, -100%, 0);
  transform: translate3d(0, -100%, 0); }

.loading .hero__title h1:last-child, .loading .footer__title h1:last-child {
  -webkit-transform: translate3d(0, 100%, 0);
  -moz-transform: translate3d(0, 100%, 0);
  -ms-transform: translate3d(0, 100%, 0);
  -o-transform: translate3d(0, 100%, 0);
  transform: translate3d(0, 100%, 0); }

.map {
  opacity: 0.35;
  transition: opacity 0.25s;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }
  .loading .map,
  .loading .map.mapboxgl-map {
    opacity: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
